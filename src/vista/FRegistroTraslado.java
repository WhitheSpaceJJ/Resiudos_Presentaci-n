/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import entidades.Asignacion_Traslado;
import entidades.Productor;
import entidades.Transportador;
import entidades.Usuario;
import entidades.Vehiculo;
import implementaciones.FabricaNegocios;
import implementaciones.INegocio;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.bson.types.ObjectId;

/**
 * Frame del registro de traslado.
 * @author Equipo 1 Jose,Abraham y Oroz
 */
public class FRegistroTraslado extends javax.swing.JFrame {

    private static FRegistroTraslado registroTraslado;
    private INegocio negocio;
    private Usuario usuario;
    private List<Asignacion_Traslado> asignaciones;

    /**
     * Patrón Singleton para que nomas exista una ventana de este tipo durante todo el transcurso de la aplicación
     * @return Instancia del frame de registro de residuos.
     */
    public static FRegistroTraslado getInstance() {
        if (FRegistroTraslado.registroTraslado != null) {
            return FRegistroTraslado.registroTraslado;
        } else {
            FRegistroTraslado.registroTraslado = new FRegistroTraslado();
            return FRegistroTraslado.registroTraslado;
        }
    }

    /**
     * Creates new form RegistroTraslado
     */
    public FRegistroTraslado() {
        initComponents();
        this.negocio = FabricaNegocios.crearFNegocio();
    }

    /**
     * Asigna al usuario ingresado como parámetro
     * @param usuario Usuario a establecer.
     */
    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        panelTablaProductos3 = new javax.swing.JScrollPane();
        tablaAsignaciones = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButtonRegistrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Asignación Traslado");
        setPreferredSize(new java.awt.Dimension(736, 480));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Registro de Traslado");
        jPanel1.add(jLabel1);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 730, 50);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tablaAsignaciones.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tablaAsignaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha Solicitada", "Residuo", "Cantidad", "Productor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaAsignaciones.setCellSelectionEnabled(true);
        tablaAsignaciones.getTableHeader().setReorderingAllowed(false);
        panelTablaProductos3.setViewportView(tablaAsignaciones);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Asignaciones de Traslado");

        jButtonRegistrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonRegistrar.setText("Registrar");
        jButtonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 535, Short.MAX_VALUE))
                    .addComponent(panelTablaProductos3))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(307, 307, 307)
                .addComponent(jButtonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(panelTablaProductos3, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 50, 730, 400);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
/**
 * Método que comprueba que se haya seleccionado alguna asignación, en caso de que si se haya seleccionado alguna, comprobara de que existan vehiculos, si si existen
 * entonces esta pantalla se esconderá y abrirá la pantalla de RegistroTrasladoDetalle e inicializará las asignaciones de traslado y los vehículos
 * @param evt Evento Action Perfomed del boton Registrar
 */
    private void jButtonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarActionPerformed
        // TODO add your handling code here:

        int indice = this.tablaAsignaciones.getSelectedRow();
        if (indice == -1) {
            JOptionPane.showMessageDialog(this, "No ha seleccionado alguna asignación.",
                    "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            List<Vehiculo> vehiculos = ((Transportador) this.usuario).getEmpresaTransporte().getVehiculos();
            if (vehiculos==null || vehiculos.isEmpty()) {
                this.mensajeAdvertenciaSinVehiculos();
            } else {
                this.setVisible(false);
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        FRegistroTrasladoDetalle p = FRegistroTrasladoDetalle.getInstance();
                        p.setAsignacionTraslado(asignaciones.get(indice));
                        p.mostrarVehiculos(vehiculos);
                        p.addWindowListener(new java.awt.event.WindowAdapter() {
                            @Override
                            public void windowClosing(java.awt.event.WindowEvent e) {
                                llenarTablaRegreso();
                                setVisible(true);
                            }
                        });
                        p.setVisible(true);
                    }
                });
            }
        }


    }//GEN-LAST:event_jButtonRegistrarActionPerformed
    /**
     * Método para activar y desactivar el botón de registrar
     */
    public void botones() {
        this.jButtonRegistrar.setEnabled(false);
        this.jButtonRegistrar.setEnabled(true);
    }

    /**
     * Método para mostrar un mensaje de advertencia que salga cuando no hayan vehículos dentro de una empresa
     */
    public void mensajeAdvertenciaSinVehiculos() {
        JOptionPane.showMessageDialog(this, "La empresa no tiene vehículos, registre alguno para continuar",
                "Error", JOptionPane.ERROR_MESSAGE);
    }

    /**
     * Método para llenar la tabla de asignaciones con elementos encontrados en la consulta de la asignación de traslados de la empresa transporte
     */
    private void llenarTablaRegreso() {
        ObjectId idEmpresaTransporte = ((Transportador) this.usuario).getIdEmpresaTransporte();
        this.asignaciones = this.negocio.consultarAsignacionTrasladosEmpresaT(idEmpresaTransporte);
        DefaultTableModel modeloTabla = (DefaultTableModel) this.tablaAsignaciones.getModel();
        modeloTabla.setRowCount(0);
        asignaciones.forEach(asignacion -> {
            Object[] fila = new Object[4];
            fila[0] = asignacion.getFechaSolicitud();
            fila[1] = asignacion.getResiduo().getNombre();
            fila[2] = asignacion.getTotalCarga();
            fila[3] = asignacion.getEmpresaProductora().getNombre();
            modeloTabla.addRow(fila);
        });
        if (asignaciones.isEmpty()) {
            this.jButtonRegistrar.setEnabled(false);
        }
    }

    /**
     * Método para mostrar las asignaciones dentro de la tabla de asignaciones
     * @param listaA Lista de asignaciones de traslado.
     */
    public void mostrarAsignaciones(List<Asignacion_Traslado> listaA) {
        this.asignaciones = listaA;
        DefaultTableModel modeloTabla = (DefaultTableModel) this.tablaAsignaciones.getModel();
        modeloTabla.setRowCount(0);
        asignaciones.forEach(asignacion -> {
            Object[] fila = new Object[4];
            fila[0] = asignacion.getFechaSolicitud();
            fila[1] = asignacion.getResiduo().getNombre();
            fila[2] = asignacion.getTotalCarga();
            fila[3] = asignacion.getEmpresaProductora().getNombre();
            modeloTabla.addRow(fila);
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRegistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane panelTablaProductos3;
    private javax.swing.JTable tablaAsignaciones;
    // End of variables declaration//GEN-END:variables
}
