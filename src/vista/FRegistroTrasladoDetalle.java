/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import entidades.Asignacion_Traslado;
import entidades.Traslado;
import entidades.Vehiculo;
import implementaciones.FabricaNegocios;
import implementaciones.INegocio;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.bson.types.ObjectId;

/**
 * Frame del registro de traslado detalle.
 *
 * @author Equipo 1 Jose,Abraham y Oroz
 */
public class FRegistroTrasladoDetalle extends javax.swing.JFrame {

    private static FRegistroTrasladoDetalle registroTrasladoDetalle;
    private INegocio negocio;
    private List<Vehiculo> listaVehiculos;
    private Asignacion_Traslado asignacionTraslado;

    /**
     * Patr칩n Singleton para que nomas exista una ventana de este tipo durante
     * todo el transcurso de la aplicaci칩n
     *
     * @return Instancia del frame de registro de traslado detalle.
     */
    public static FRegistroTrasladoDetalle getInstance() {
        if (FRegistroTrasladoDetalle.registroTrasladoDetalle != null) {
            return FRegistroTrasladoDetalle.registroTrasladoDetalle;
        } else {
            FRegistroTrasladoDetalle.registroTrasladoDetalle = new FRegistroTrasladoDetalle();
            return FRegistroTrasladoDetalle.registroTrasladoDetalle;
        }
    }

    /**
     * Creates new form Vehiculos
     */
    public FRegistroTrasladoDetalle() {
        initComponents();
        this.negocio = FabricaNegocios.crearFNegocio();
        this.jDateChooser1.getDateEditor().setEnabled(false);
    }

    /**
     * Inicializa la asignaci칩n de traslado con la ingresada como par치metro
     *
     * @param asignacionTraslado Asignacion de traslado a establecer.
     */
    public void setAsignacionTraslado(Asignacion_Traslado asignacionTraslado) {
        this.asignacionTraslado = asignacionTraslado;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabelTitulo = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtKilometros = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCosto = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTratamiento = new javax.swing.JTextField();
        btnRegistrar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtDestino = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVehiculos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Detalle Traslado");
        setMinimumSize(new java.awt.Dimension(809, 380));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelTitulo.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelTitulo.setText("Detalle de Registro de Traslado");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(jLabelTitulo)
                .addContainerGap(245, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 0, 800, 50);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("KM");

        txtKilometros.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Costo");

        txtCosto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Fecha Entrega");

        jDateChooser1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Destino");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Tratamiento");

        txtTratamiento.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        btnRegistrar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txtDestino.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(btnRegistrar))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtDestino, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtKilometros)
                            .addComponent(txtCosto)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)))
                    .addComponent(txtTratamiento))
                .addGap(123, 123, 123))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtKilometros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTratamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4);
        jPanel4.setBounds(0, 50, 360, 320);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel1.setText("Vehiculos");

        tblVehiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Modelo", "Tipo", "Matricula", "Registrar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblVehiculos);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(122, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5);
        jPanel5.setBounds(360, 50, 440, 320);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Al pulsar el bot칩n cancelar se llama al m칠todo de limpiar
     *
     * @param evt Evento Action Perfomed del boton Cancelar
     */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.limpiar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * Primero valida el traslado, despues comprueba con la fecha que se pueda
     * seleccionar una fecha menor a la de la solicitud y que no se pueda
     * seleccionar la misma fecha de la solicitud, si la fecha es adecuada
     * entonces llenar치 una lista de vehiculos auxiliar, despues comprobar치 que
     * la lista auxiliar este vacia (se침al de que no hay ningun vehiculo
     * seleccionado), en caso de que no est칠 vacia entonces intentar치 guardar el
     * traslado, en caso de que si pueda guardar entonces le infromar치 al
     * usuario, si la actualizaci칩n no fue v치lida entonces informar치 al usuario
     * de ello, y si no se pudo guardar tambien informar치 al usuario de ello
     *
     * @param evt Evento Action Perfomed del boton Registrar
     */
    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
        if (validarTraslado()) {
            return;
        }

        Date a = this.jDateChooser1.getDate();
        int dia = a.getDate();
        int mes = a.getMonth();
        int ano = a.getYear();
        Date fechaSolicitud = new GregorianCalendar(ano + 1900, mes, dia).getTime();

        if (fechaSolicitud.before(this.asignacionTraslado.getFechaSolicitud())) {
            JOptionPane.showMessageDialog(this, "No es posible seleccionar una fecha menor a la de la solicitud.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            this.jDateChooser1.setDate(this.asignacionTraslado.getFechaSolicitud());
            return;
        }
        if (fechaSolicitud.equals(this.asignacionTraslado.getFechaSolicitud())) {
            JOptionPane.showMessageDialog(this, "No es posible seleccionar la misma fecha de la solicitud.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        List<Vehiculo> listaVehiculosAuxiliar = new ArrayList<>();
        for (int i = 0; i < this.tblVehiculos.getRowCount(); i++) {
            if (this.tblVehiculos.getValueAt(i, 4) != null && ((boolean) this.tblVehiculos.getValueAt(i, 4)) == true) {
                Vehiculo vehiculo = new Vehiculo();
                vehiculo.setId(this.listaVehiculos.get(i).getId());
                vehiculo.setMatricula(this.listaVehiculos.get(i).getMatricula());
                vehiculo.setTipo(this.listaVehiculos.get(i).getTipo());
                listaVehiculosAuxiliar.add(vehiculo);
            }
        }
        if (listaVehiculosAuxiliar.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Es necesario seleccionar alg칰n veh칤culo, para "
                    + "proceder con el registro de traslado.");
        } else {

            Date fechaLLegada = this.jDateChooser1.getDate();
            String tratamiento = this.txtTratamiento.getText();
            String destino = this.txtDestino.getText();
            double costo = Double.valueOf(this.txtCosto.getText());
            double kilometros = Double.valueOf(this.txtKilometros.getText());
            ObjectId idAsignacion = this.asignacionTraslado.getId();
            ObjectId idEmpresaTransporte = this.asignacionTraslado.getIdEmpresaTransporte();
            Traslado traslado = new Traslado(fechaLLegada, tratamiento, costo, kilometros, idAsignacion, idEmpresaTransporte, listaVehiculosAuxiliar, destino);
            boolean validarGuardar = this.negocio.guardarTraslado(traslado);
            if (validarGuardar) {
                JOptionPane.showMessageDialog(this, "Se agrego el traslado.", "Informaci칩n", JOptionPane.INFORMATION_MESSAGE);
                boolean validarActualizacion = this.negocio.actualizarAsignacion(idAsignacion);
                if (!validarActualizacion) {
                    JOptionPane.showMessageDialog(this, "Error al actualizar asignaci칩n.", "Informaci칩n", JOptionPane.INFORMATION_MESSAGE);
                }
                this.salir();
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo agregar el traslado.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }


    }//GEN-LAST:event_btnRegistrarActionPerformed

    /**
     * M칠todo para mostrar un mensaje de error
     *
     * @param mensaje Mensaje a mostrar.
     */
    public void mostrarMensajeError(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje,
                "Error", JOptionPane.ERROR_MESSAGE);
    }

    /**
     * M칠todo para validar los traslados comprobando que no esten vacios y sean
     * del tama침o adecuado
     *
     * @return true si se presenta alguna irregularidad, false en caso
     * contrario.
     */
    public boolean validarTraslado() {
        if (verificarDatosVacios()) {
            return true;
        }
        if (verificarCantidadTamanho()) {
            return true;
        }
        return false;
    }

    /**
     * M칠todo que sirve para verificar que no existan datos vacios en ninguno de
     * los campos
     *
     * @return true si se presenta alguna irregularidad, false en caso
     * contrario.
     */
    private boolean verificarDatosVacios() {
        if (this.txtKilometros.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Es necesario escribir los kilometros antes de guardar.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        if (this.txtCosto.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Es necesario escribir el costo antes de guardar.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        if (this.txtTratamiento.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Es necesario escribir el tratamiento antes de guardar.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        if (this.txtDestino.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Es necesario escribir el destino antes de guardar.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        return false;
    }

    /**
     * Metodo que valida el tam침o de los campos de texto
     *
     * @return true si presentan alguna irregularidad, false en caso contrario.
     */
    private boolean verificarCantidadTamanho() {
        String tratamiento = this.txtTratamiento.getText();
        String costo = this.txtCosto.getText();
        String kms = this.txtKilometros.getText();
        String destino = this.txtDestino.getText();

        if (tratamiento.length() > 100) {
            JOptionPane.showMessageDialog(this, "El tratamiento es demasiado largo, m치ximo 100 caracteres.", "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        if (destino.length() > 100) {
            JOptionPane.showMessageDialog(this, "El destino es demasiado largo, m치ximo 100 caracteres.", "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        if (costo.contains("d")) {
            JOptionPane.showMessageDialog(null, "El costo contiene caracteres inv치lidos.", "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        if (costo.contains("d")) {
            JOptionPane.showMessageDialog(null, "Los kil칩metros contienen caracteres inv치lidos.", "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }

        Double b = new Double(1000000);
        double a = 0;
        try {
            a = new Double(costo);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "El costo contiene caracteres inv치lidos.", "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        if (a >= b) {
            JOptionPane.showMessageDialog(this, "El costo es demasiado grande.", "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        if (a <= 0) {
            JOptionPane.showMessageDialog(this, "El costo no debe de ser igual o menor a 0.", "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }

        Double d = new Double(1000000);
        double c = 0;
        try {
            c = new Double(kms);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Los kil칩metros contienen caracteres inv치lidos.", "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        if (c >= d) {
            JOptionPane.showMessageDialog(this, "El kil칩metro es demasiado grande.", "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        if (c < 1000) {
            JOptionPane.showMessageDialog(this, "El kil칩metro no debe de ser igual o menor a 1000.", "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        return false;
    }

    /**
     * M칠todo que limpia los campos existentes y desactiva el bot칩n registrar
     */
    private void salir() {
        this.txtKilometros.setText("");
        this.txtCosto.setText("");
        this.txtDestino.setText("");
        this.txtTratamiento.setText("");
        this.jDateChooser1.setDate(null);
        this.btnRegistrar.setEnabled(false);
    }

    /**
     * M칠todo que limpia los campos existentes
     */
    private void limpiar() {
        this.txtKilometros.setText("");
        this.txtCosto.setText("");
        this.txtDestino.setText("");
        this.txtTratamiento.setText("");
        this.jDateChooser1.setDate(null);
    }

    /**
     * M칠todo para mostrar los vehiculos dentro de la tabla de vehiculos y
     * activar el bot칩n de registrar
     *
     * @param listaV Lista de vehiculos de la empresa.
     */
    public void mostrarVehiculos(List<Vehiculo> listaV) {
        this.btnRegistrar.setEnabled(true);
        this.listaVehiculos = listaV;
        this.jDateChooser1.setDate(this.asignacionTraslado.getFechaSolicitud());
        List<Vehiculo> lista = this.listaVehiculos;
        DefaultTableModel modeloTabla = (DefaultTableModel) this.tblVehiculos.getModel();
        modeloTabla.setRowCount(0);
        lista.forEach(vehiculos -> {
            Object[] fila = new Object[5];
            fila[0] = vehiculos.getNombre();
            fila[1] = vehiculos.getModelo();
            fila[2] = vehiculos.getMatricula();
            fila[3] = vehiculos.getTipo();
            fila[4] = false;
            modeloTabla.addRow(fila);
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnRegistrar;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblVehiculos;
    private javax.swing.JTextField txtCosto;
    private javax.swing.JTextField txtDestino;
    private javax.swing.JTextField txtKilometros;
    private javax.swing.JTextField txtTratamiento;
    // End of variables declaration//GEN-END:variables
}
